@model SoteCare.ViewModels.VFunctionChart

@{
    ViewBag.Title = "Vital Functions";
}

<div class="container">
    <h2>Vital Functions for @Model.PatientName</h2>

    @if (ViewBag.NoRecords)
    {
        <div class="alert alert-warning">
            No vital signs recorded for this patient.
        </div>
        <a href="@Url.Action("Create", "VitalFunctions", new { id = ViewBag.PatientID })" class="btn btn-primary">
            Add Vital Function
        </a>
    }
    else
    {
        <button class="btn btn-success mb-3" id="showAddForm">Add New Vital Function</button>
        <div id="addVitalFunctionForm" style="display: none;">
            @using (Html.BeginForm("AddVitalFunction", "VitalFunctions", FormMethod.Post, new { id = "addVitalForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PatientID)

                <div class="form-group">
                    <label>Date/Time</label>
                    <input type="datetime-local" id="DateTimeInput" name="DateTime" class="form-control" required />
                </div>

                <div class="form-group">
                    <label>Heart Rate</label>
                    <input type="number" name="HeartRate" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Systolic BP</label>
                    <input type="number" name="SystolicBloodPressure" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Diastolic BP</label>
                    <input type="number" name="DiastolicBloodPressure" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Respiratory Rate</label>
                    <input type="number" name="RespiratoryRate" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Temperature</label>
                    <input type="number" step="0.1" name="Temperature" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Oxygen Saturation</label>
                    <input type="number" step="0.1" name="OxygenSaturation" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            }
        </div>

        <canvas id="vitalChart" width="800" height="400"></canvas>
    }
</div>

<div class="mt-3">
    @Html.ActionLink("Back to Patient Details", "Details", "Patients", new { id = ViewBag.PatientID }, new { @class = "btn btn-secondary" })
</div>

<script>
    window.vitalData = @Html.Raw(Json.Encode(new {
        Dates = Model.Dates,
        HeartRates = Model.HeartRates,
        SystolicBP = Model.SystolicBP,
        DiastolicBP = Model.DiastolicBP
    }));

    document.addEventListener("DOMContentLoaded", function () {
        const addButton = document.getElementById("showAddForm"); // Button to show/hide the form
        const addForm = document.getElementById("addVitalFunctionForm"); // Form to toggle visibility

        if (addButton && addForm) {
            addButton.addEventListener("click", function () {
                if (addForm.style.display === "none" || addForm.style.display === "") {
                    addForm.style.display = "block"; // Show the form
                } else {
                    addForm.style.display = "none"; // Hide the form
                }
            });
        }

        // Chart rendering
        const ctx = document.getElementById('vitalChart').getContext('2d');
        window.myVitalChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: window.vitalData.Dates,
                datasets: [
                    {
                        label: 'Heart Rate',
                        data: window.vitalData.HeartRates,
                        borderColor: 'blue',
                        borderWidth: 2,
                        fill: false
                    },
                    {
                        label: 'Systolic Blood Pressure',
                        data: window.vitalData.SystolicBP,
                        borderColor: 'red',
                        borderWidth: 2,
                        fill: false
                    },
                    {
                        label: 'Diastolic Blood Pressure',
                        data: window.vitalData.DiastolicBP,
                        borderColor: 'green',
                        borderWidth: 2,
                        fill: false
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Vital Signs Over Time'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Values'
                        }
                    }
                }
            }
        });
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/Scripts/vitalfunction.js"></script>